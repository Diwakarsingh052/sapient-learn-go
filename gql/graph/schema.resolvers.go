package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"fmt"
	"gql/author/models"

	"github.com/google/uuid"
)

// CreateAuthor is the resolver for the createAuthor field.
func (r *mutationResolver) CreateAuthor(ctx context.Context, input models.NewAuthor) (*models.Author, error) {
	// Lock for writing to prevent race conditions
	r.mutex.Lock()
	defer r.mutex.Unlock()

	// Generate a new unique ID for the author
	id := uuid.NewString()

	// Create a new author with the input data
	author := &models.Author{
		ID:    id,
		Name1: input.Name,
		Class: input.Class,
		Bio:   input.Bio,
	}

	// Store the author in our map
	r.authors[id] = author
	r.authorsList = append(r.authorsList, author)
	return author, nil
}

// Author is the resolver for the author field.
func (r *queryResolver) Author(ctx context.Context, id string) (*models.Author, error) {
	panic(fmt.Errorf("not implemented: Author - author"))
}

// Authors is the resolver for the authors field.
func (r *queryResolver) Authors(ctx context.Context) ([]*models.Author, error) {
	return r.authorsList, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *newAuthorResolver) Name(ctx context.Context, obj *models.NewAuthor, data string) error {
	panic(fmt.Errorf("not implemented: Name - name"))
}
func (r *Resolver) NewAuthor() NewAuthorResolver { return &newAuthorResolver{r} }
type newAuthorResolver struct{ *Resolver }
*/
